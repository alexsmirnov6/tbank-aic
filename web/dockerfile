ARG CUDA_IMAGE="12.1.1-devel-ubuntu22.04"
FROM nvidia/cuda:${CUDA_IMAGE}

ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Etc/UTC

# Установка необходимых пакетов
RUN apt-get update && apt-get install -y tzdata nginx certbot python3-certbot-nginx && \
    apt-get clean && rm -rf /var/lib/apt/lists/* \
    && apt-get update && apt-get upgrade -y \
    && apt-get install -y git build-essential \
    python3 python3-pip gcc wget \
    ocl-icd-opencl-dev opencl-headers clinfo \
    libclblast-dev libopenblas-dev \
    && mkdir -p /etc/OpenCL/vendors && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# Копируем файлы приложения в контейнер
WORKDIR /app

ENV CUDA_DOCKER_ARCH=all

RUN apt-get -y update && apt-get -y upgrade && apt-get install -y --no-install-recommends ffmpeg

# Устанавливаем зависимости для Python
COPY requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

COPY . /app
RUN CMAKE_ARGS="-DLLAMA_CUBLAS=on"
ENV DAGSTER_UI_BASE_PATH=/training

# Убедитесь, что вы скопировали сертификаты в нужное место на хостовой машине
COPY certs/fullchain.pem /etc/letsencrypt/live/phonix.pro/fullchain.pem
COPY certs/privkey.pem /etc/letsencrypt/live/phonix.pro/privkey.pem


# Открываем порты для NGINX
EXPOSE 80 443 8000 8501 3000

# Копируем конфигурацию NGINX
COPY nginx.conf /etc/nginx/sites-available/default

# Запуск NGINX и Streamlit

CMD ["sh", "-c", "nginx && streamlit run main.py --server.port 8501 & uvicorn api.service:app --host 0.0.0.0 --port 8000 --reload --log-level debug & dagster dev -f pipeline/dagster_pipe.py -h 0.0.0.0 & wait"]


